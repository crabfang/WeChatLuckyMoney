 apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "21.1.2"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.cabe.plugin.redpacket"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 6
        versionName "v4.0.1"
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs {
        releaseConfig {
            storeFile file("cabe.keystore")
            keyAlias "cabe"
            keyPassword "19871010"
            storePassword "19871010"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.4.0'
    //compile 'com.tencent.bugly:crashreport:latest.release'  //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.8
    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.0.1
}

 apply plugin: "com.cabe.pgyer"

 String getPropertyVal(String key) {
     Properties properties = new Properties()
     try {
         properties.load(project.rootProject.file('local.properties').newDataInputStream())
     } catch (Exception e) {
         e.printStackTrace()
         return ""
     }
     String property = properties.getProperty(key)
     println "property-->" + key + " : " + property
     property
 }
 pgyer {
     _api_key = getPropertyVal("pgyer_api_key")
     uKey = getPropertyVal("pgyer_user_key")
 }

// task doUpload(dependsOn: [assembleRelease, uploadPgyer])  {
//
//     android.applicationVariants.all { variant ->
//         variant.assemble.doLast {
//             variant.outputs.each { output ->
//                 apks {
//                     release {
//                         sourceFile = file(output.outputFile.path)
//                     }
//                 }
//             }
//         }
//     }
// }
